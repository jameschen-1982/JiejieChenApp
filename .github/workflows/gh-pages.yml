name: cicd pipeline

on:
  push:
    branches:
    - main

jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::773631419510:role/github-action-role
        role-session-name: githubactionsession
        aws-region: ap-southeast-2

    - name: Checkout
      uses: actions/checkout@v2

    - name: Verify Terraform version
      run: terraform --version

    - name: Terraform init
      working-directory: ./infra
      run: terraform init -input=false

    - name: Terraform validation
      working-directory: ./infra
      run: terraform validate

    - name: Terraform apply
      working-directory: ./infra
      run: terraform apply -auto-approve -var-file=main.tfvars -input=false
      
  deploy_frontend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume:  ${{ secrets.ROLE_TO_ASSUME }}
        role-session-name: githubactionsession
        aws-region: ap-southeast-2

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install dependencies
      working-directory: ./JiejieChenApp/ClientApp
      run: npm install

    - name: Run tests
      working-directory: ./JiejieChenApp/ClientApp
      run: npm run test:headless

    - name: Build
      working-directory: ./JiejieChenApp/ClientApp
      run: npm run prerender 

    - name: Deploy
      if: success()
      run: aws s3 sync ./JiejieChenApp/ClientApp/dist/jiejiechenapp/browser s3://${{vars.S3_BUCKET_NAME}}

    - name: Deploy
      if: success()
      run: aws cloudformation create-invalidation --distribution-id ${{secrets.CLOUDFRONT_DISTRIBUTION_ID}} --paths "/*"