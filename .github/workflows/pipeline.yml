name: cicd pipeline

on:
  push:
    branches:
    - main
    - api-gateway-node-container

jobs:

  build_angular:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume:  ${{ secrets.ROLE_TO_ASSUME }}
        role-session-name: githubactionsession
        aws-region: ap-southeast-2

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Install run-time dependencies
      working-directory: jiejiechen-angular
      run: yarn install --prod --frozen-lockfile
      
    - name: Save run-time dependencies for packaging
      working-directory: jiejiechen-angular
      run: cp -R . ../package

    - name: Install other dependencies
      working-directory: jiejiechen-angular
      run: yarn install --frozen-lockfile

#    - name: Run tests
#      working-directory: jiejiechen-angular
#      run: yarn test:headless

    - name: Build
      working-directory: jiejiechen-angular
      run: yarn build 

    - name: Save run-time dependencies for packaging
      working-directory: jiejiechen-angular
      run: cp -R dist ../package

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jiejiechen_angular
        path: |
          package

  deploy_infra:
    runs-on: ubuntu-latest
    needs: build_angular
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::773631419510:role/github-action-role
          role-session-name: githubactionsession
          aws-region: ap-southeast-2

      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: jiejiechen_angular
          path: dist

      - name: Verify Terraform version
        run: terraform --version

      - name: Terraform init
        working-directory: ./infra
        run: terraform init -upgrade -input=false

      - name: Terraform validation
        working-directory: ./infra
        run: terraform validate

      - name: Terraform apply
        working-directory: ./infra
        run: terraform apply -auto-approve -var-file=main.tfvars -input=false
      